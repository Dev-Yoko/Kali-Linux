name: Build, Test, and Release Custom Kali Linux ISO

on:
  push:
    tags:
      - 'v*.*.*'  # Build on version tags
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release_type: [stable, testing, dev]  # Customizable environment
    timeout-minutes: 120  # Increase timeout to 2 hours

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up caching for package manager (APT)
      - name: Cache APT Packages
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: apt-cache-${{ runner.os }}-${{ hashFiles('**/config/*.sh') }}
          restore-keys: |
            apt-cache-${{ runner.os }}

      # Install dependencies for building the ISO
      - name: Install Build Dependencies
        run: |
          sudo apt update -qq  # Quiet update
          sudo apt install -y curl gnupg2 live-build xorriso squashfs-tools genisoimage zip

      # Prepare and configure Kali Linux ISO build
      - name: Configure Custom Kali Linux ISO
        run: |
          git clone https://github.com/Spijkervet/Kali-Linux-Live.git

      # Build the custom ISO
      - name: Build the ISO
        run: |
          cd Kali-Linux-Live
          ./build.sh --variant i3wm --version 19.3 --verbose

      # Cache the build directory to speed up future builds
      - name: Cache Build Directory
        uses: actions/cache@v3
        with:
          path: kali-iso
          key: kali-build-${{ runner.os }}-${{ matrix.release_type }}-${{ github.sha }}
          restore-keys: |
            kali-build-${{ runner.os }}-${{ matrix.release_type }}

      # Rename and compress the ISO
      - name: Rename and Compress ISO
        run: |
          ISO_NAME="kali-linux-${{ matrix.release_type }}-${{ github.sha }}.iso"
          mv kali-iso/*.iso $ISO_NAME
          zip $ISO_NAME.zip $ISO_NAME

      # Generate checksum (SHA256) for the ISO
      - name: Generate Checksum
        run: |
          sha256sum $ISO_NAME > $ISO_NAME.sha256

      # Test the generated ISO (optional, depends on your test environment)
      - name: Test the ISO (Optional)
        run: |
          # Here you could run some automated tests on the ISO (e.g., mount it and check contents)
          echo "Running basic tests on the ISO"
          ls -lh $ISO_NAME
          file $ISO_NAME
          # Additional test logic can be added here (e.g., boot the ISO in a VM)

      # Upload the ISO, checksum, and changelog to GitHub release
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            $ISO_NAME
            $ISO_NAME.zip
            $ISO_NAME.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  changelog:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate Changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}

      - name: Upload Changelog to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: CHANGELOG.md
          asset_name: "CHANGELOG-${{ github.sha }}.md"
          asset_content_type: text/markdown
