name: Dynamic Build and Release Kali Linux ISO

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "release/*"
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight

jobs:
  evaluate-changes:
    name: Evaluate Changes
    runs-on: ubuntu-latest
    outputs:
      run_build: ${{ steps.determine-run.outputs.run_build }}
      build_type: ${{ steps.determine-run.outputs.build_type }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Whether to Run Build
        id: determine-run
        run: |
          # Simulate evaluating changes and determining if build is necessary
          echo "Evaluating repository changes..."
          
          # You could add custom logic here, such as checking files, changes, or conditions
          if git diff --name-only HEAD^ HEAD | grep -q "live-build-config/"; then
            echo "::set-output name=run_build::true"
          else
            echo "::set-output name=run_build::false"
          fi

          # Determine the type of build based on changes or environment
          # e.g., 'minimal', 'standard', 'full'
          if [ "$(git diff --name-only HEAD^ HEAD | grep 'full-config-file')" ]; then
            echo "::set-output name=build_type::full"
          else
            echo "::set-output name=build_type::standard"
          fi

  build-iso:
    name: Build ISO
    runs-on: ubuntu-latest
    needs: evaluate-changes
    if: needs.evaluate-changes.outputs.run_build == 'true'
    strategy:
      matrix:
        architecture: [amd64, arm64]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache
            /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/build.sh') }}

      - name: Build Kali Linux ISO
        run: |
          cd live-build-config
          
          # Use dynamic build type based on evaluation
          if [ "${{ needs.evaluate-changes.outputs.build_type }}" = "full" ]; then
            echo "Building full ISO..."
            sudo ./build.sh --architecture ${{ matrix.architecture }} --distribution kali-rolling --variant full --verbose
          else
            echo "Building standard ISO..."
            sudo ./build.sh --architecture ${{ matrix.architecture }} --distribution kali-rolling --variant standard --verbose
          fi

      - name: Upload ISO to Artifact Store
        uses: actions/upload-artifact@v3
        with:
          name: kali-linux-${{ matrix.architecture }}-iso
          path: live-build-config/images/*.iso

  release:
    name: Create Release and Upload ISO
    runs-on: ubuntu-latest
    needs: build-iso

    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: 'kali-linux-latest'
          release_name: 'Kali Linux Latest ISO'
          draft: false
          prerelease: false

      - name: Download ISO Artifact
        uses: actions/download-artifact@v3
        with:
          name: kali-linux-${{ matrix.architecture }}-iso
          path: ./downloaded-iso/

      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloaded-iso/*.iso
          asset_name: kali-linux-${{ matrix.architecture }}-latest.iso
          asset_content_type: application/octet-stream
